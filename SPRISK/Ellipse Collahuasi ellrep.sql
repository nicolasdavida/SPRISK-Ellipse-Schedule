--*******************Originales*****************************************************
--Stock On Hand
SELECT ELLREP_MSF1HD.STOCK_CODE, Sum(ELLREP_MSF1HD.SOH) AS stock_total
FROM ELLREP_MSF1HD INNER JOIN ELLREP_MSF1CS ON ELLREP_MSF1HD.CUSTODIAN_ID = ELLREP_MSF1CS.CUSTODIAN_ID
WHERE (((ELLREP_MSF1HD.HOLDING_TYPE)="F") AND ((ELLREP_MSF1CS.CUSTODIAN_TYPE)="W") AND ((ELLREP_MSF1HD.STK_OWNERSHP_IND)="O" Or (ELLREP_MSF1HD.STK_OWNERSHP_IND)="C"))
GROUP BY ELLREP_MSF1HD.STOCK_CODE;

--Descripción Extendida
SELECT ELLREP_MSF100.STOCK_CODE, ELLREP_MSF1CC.CAT_EXT_DATA
FROM ELLREP_MSF100 INNER JOIN ELLREP_MSF1CC ON ELLREP_MSF100.CAT_EXT_UUID = ELLREP_MSF1CC.CAT_EXT_UUID;

--Descripción Corta y Otros
SELECT ELLREP_MSF170.STOCK_CODE, ELLREP_MSF100.STOCK_STATUS, ELLREP_MSF100.STOCK_SECTIONX1 AS CRITICIDAD, ELLREP_MSF100.ITEM_NAME, 
ELLREP_MSF100.DESC_LINEX1, ELLREP_MSF100.DESC_LINEX2, ELLREP_MSF100.DESC_LINEX3, ELLREP_MSF100.DESC_LINEX4, ELLREP_MSF170.UNIT_OF_ISSUE, 
ELLREP_MSF170.INVENT_COST_PR, ELLREP_MSF170.CLASS, ELLREP_MSF170.STOCK_TYPE, ELLREP_MSF170.ROQ, ELLREP_MSF170.DUES_IN, ELLREP_MSF170.IN_TRANSIT, 
ELLREP_MSF170.CONSIGN_ITRANS, ELLREP_MSF170.TOTAL_PICKED, ELLREP_MSF170.DUES_OUT, ELLREP_MSF170.RESERVED
FROM ELLREP_MSF100 INNER JOIN ELLREP_MSF170 ON ELLREP_MSF100.STOCK_CODE = ELLREP_MSF170.STOCK_CODE
GROUP BY ELLREP_MSF170.STOCK_CODE, ELLREP_MSF100.STOCK_STATUS, ELLREP_MSF100.STOCK_SECTIONX1, ELLREP_MSF100.ITEM_NAME, ELLREP_MSF100.DESC_LINEX1, ELLREP_MSF100.DESC_LINEX2, ELLREP_MSF100.DESC_LINEX3, ELLREP_MSF100.DESC_LINEX4, ELLREP_MSF170.UNIT_OF_ISSUE, ELLREP_MSF170.INVENT_COST_PR, ELLREP_MSF170.CLASS, ELLREP_MSF170.STOCK_TYPE, ELLREP_MSF170.ROQ, ELLREP_MSF170.DUES_IN, ELLREP_MSF170.IN_TRANSIT, ELLREP_MSF170.CONSIGN_ITRANS, ELLREP_MSF170.TOTAL_PICKED, ELLREP_MSF170.DUES_OUT, ELLREP_MSF170.RESERVED;

--************************************************************************************
--Query Enviada adaptada
SELECT a1.STOCK_CODE, Sum(a1.SOH) AS stock_total
FROM ellrep.MSF1HD a1 INNER JOIN ellrep.MSF1CS b1 ON a1.CUSTODIAN_ID = b1.CUSTODIAN_ID
WHERE (((a1.HOLDING_TYPE)='F') AND ((b1.CUSTODIAN_TYPE)='W') AND ((a1.STK_OWNERSHP_IND)='O' Or (a1.STK_OWNERSHP_IND)='C')) --and a1.STOCK_CODE=000001339
GROUP BY a1.STOCK_CODE;

SELECT a1.STOCK_CODE, b1.CAT_EXT_DATA
FROM ellrep.MSF100 a1 INNER JOIN ellrep.MSF1CC b1 ON a1.CAT_EXT_UUID = b1.CAT_EXT_UUID;

select count(1)
FROM ellrep.MSF1HD a INNER JOIN ellrep.MSF1CS b ON a.CUSTODIAN_ID = b.CUSTODIAN_ID
WHERE (((a.HOLDING_TYPE)='F') AND ((b.CUSTODIAN_TYPE)='W') AND ((a.STK_OWNERSHP_IND)='O' Or (a.STK_OWNERSHP_IND)='C'));



--*************************************************************************************
--Query creada final Stock Total
SELECT a.STOCK_CODE, Sum(a.SOH) AS STOCK_TOTAL
FROM ellrep.MSF1HD a INNER JOIN ellrep.MSF1CS b ON a.CUSTODIAN_ID = b.CUSTODIAN_ID
WHERE (((a.HOLDING_TYPE)='F') AND ((b.CUSTODIAN_TYPE)='W') AND ((a.STK_OWNERSHP_IND)='O' Or (a.STK_OWNERSHP_IND)='C')) --and a1.STOCK_CODE=000001339
GROUP BY a.STOCK_CODE
ORDER BY a.STOCK_CODE;


--Query creada final Datos complementarios, descripcion, costo, leadtime etc
SELECT  B.STOCK_CODE, A.STOCK_STATUS, A.STOCK_SECTIONX1 AS CRITICIDAD, 
        A.ITEM_NAME, B.INVENT_COST_PR,  B.CLASS, B.STOCK_TYPE, B.UNIT_OF_ISSUE, 
        (A.DESC_LINEX1  || ' ' || A.DESC_LINEX2  || ' ' ||  A.DESC_LINEX3  || ' ' || A.DESC_LINEX4) as DS,        
        (SELECT b1.CAT_EXT_DATA
         FROM ellrep.MSF100 a1 INNER JOIN ellrep.MSF1CC b1 ON a1.CAT_EXT_UUID = b1.CAT_EXT_UUID 
         and a1.STOCK_CODE=B.STOCK_CODE
        ) as DS_LARGE,
        B.DUES_IN, B.IN_TRANSIT, B.CONSIGN_ITRANS, B.TOTAL_PICKED, B.DUES_OUT, B.RESERVED
FROM ellrep.MSF100 A INNER JOIN ellrep.MSF170 B ON A.STOCK_CODE = B.STOCK_CODE
WHERE A.CLASS in ('2','E','R','S') and B.STOCK_TYPE in ('1','2','5','6','7','8')
GROUP BY B.STOCK_CODE, A.STOCK_STATUS, A.STOCK_SECTIONX1, A.ITEM_NAME, A.DESC_LINEX1, A.DESC_LINEX2, A.DESC_LINEX3, A.DESC_LINEX4, 
        B.UNIT_OF_ISSUE, B.INVENT_COST_PR, B.CLASS, B.STOCK_TYPE, B.ROQ, B.DUES_IN, B.IN_TRANSIT, B.CONSIGN_ITRANS, B.TOTAL_PICKED, 
        B.DUES_OUT, B.RESERVED;

		






